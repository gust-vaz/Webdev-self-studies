# https://www.youtube.com/watch?v=pg19Z8LL06w  Docker
# https://www.youtube.com/watch?v=SXwC9fSwct8  Docker Compose
# https://www.youtube.com/watch?v=s_o8dwzRlu4  Kubernetes

# export POSTGRES_ADMIN_USER=user
# export POSTGRES_ADMIN_PASS=password
# docker-compose -f site-compose.yaml up -d
# docker-compose -f site-compose.yaml down
# docker-compose -f site-compose.yaml restart app
# docker-compose -f site-compose.yaml down --volumes --rmi all

services:
  app:
    build: ./backend
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - DB_USER=${POSTGRES_ADMIN_USER}
      - DB_PASS=${POSTGRES_ADMIN_PASS}
      - DB_NAME=Banco
      - DB_HOST=postgres
      - DB_PORT=5432
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:17.2
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_ADMIN_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASS}
      POSTGRES_DB: Banco
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_ADMIN_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  pgadmin:
    image: dpage/pgadmin4:8.4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres-data:
  pgadmin-data: